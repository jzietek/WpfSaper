<UserControl x:Class="WpfSaper.Controls.TileControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             Name="MyTileControl">
    <UserControl.Resources>
        <s:Double x:Key="backgroundEdgeRadius">20</s:Double>

        <DrawingBrush x:Key="bombBrush">
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <GeometryDrawing Brush="Red">
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry Rect="0,0,300,300" RadiusX="{StaticResource backgroundEdgeRadius}" RadiusY="{StaticResource backgroundEdgeRadius}" />
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                    <GeometryDrawing Brush="Black">
                        <GeometryDrawing.Geometry>
                            <GeometryGroup>
                                <LineGeometry StartPoint="40,150" EndPoint="260,150" />
                                <LineGeometry StartPoint="40,150" EndPoint="260,150" >
                                    <LineGeometry.Transform>
                                        <RotateTransform Angle="30" CenterX="150" CenterY="150" />
                                    </LineGeometry.Transform>
                                </LineGeometry>
                                <LineGeometry StartPoint="40,150" EndPoint="260,150" >
                                    <LineGeometry.Transform>
                                        <RotateTransform Angle="60" CenterX="150" CenterY="150" />
                                    </LineGeometry.Transform>
                                </LineGeometry>
                                <LineGeometry StartPoint="40,150" EndPoint="260,150" >
                                    <LineGeometry.Transform>
                                        <RotateTransform Angle="90" CenterX="150" CenterY="150" />
                                    </LineGeometry.Transform>
                                </LineGeometry>
                                <LineGeometry StartPoint="40,150" EndPoint="260,150" >
                                    <LineGeometry.Transform>
                                        <RotateTransform Angle="120" CenterX="150" CenterY="150" />
                                    </LineGeometry.Transform>
                                </LineGeometry>
                                <LineGeometry StartPoint="40,150" EndPoint="260,150" >
                                    <LineGeometry.Transform>
                                        <RotateTransform Angle="150" CenterX="150" CenterY="150" />
                                    </LineGeometry.Transform>
                                </LineGeometry>
                                <EllipseGeometry Center="150,150" RadiusX="90" RadiusY="90" />
                            </GeometryGroup>
                        </GeometryDrawing.Geometry>
                        <GeometryDrawing.Pen>
                            <Pen Thickness="10" StartLineCap="Round" EndLineCap="Round">
                                <Pen.Brush>
                                    <SolidColorBrush Color="Black" />
                                </Pen.Brush>
                            </Pen>
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>

        <DrawingBrush x:Key="flagBrush">
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <GeometryDrawing Brush="White">
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry Rect="0,0,300,300" RadiusX="{StaticResource backgroundEdgeRadius}" RadiusY="{StaticResource backgroundEdgeRadius}" />
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>

                    <GeometryDrawing>
                        <GeometryDrawing.Geometry>
                            <PathGeometry>
                                <PathFigure IsClosed="True" StartPoint="150,50">
                                    <LineSegment Point="250, 150" />
                                    <LineSegment Point="150, 150" />
                                </PathFigure>
                            </PathGeometry>
                        </GeometryDrawing.Geometry>
                        <GeometryDrawing.Pen>
                            <Pen Thickness="2" StartLineCap="Round" EndLineCap="Round">
                                <Pen.Brush>
                                    <SolidColorBrush Color="Red" />
                                </Pen.Brush>
                            </Pen>
                        </GeometryDrawing.Pen>
                        <GeometryDrawing.Brush>
                            <SolidColorBrush Color="Red" />
                        </GeometryDrawing.Brush>
                    </GeometryDrawing>

                    <GeometryDrawing>
                        <GeometryDrawing.Geometry>
                            <GeometryGroup>
                                <LineGeometry StartPoint="150,50" EndPoint="150,250" />
                                <LineGeometry StartPoint="100,250" EndPoint="200,250" />
                            </GeometryGroup>
                        </GeometryDrawing.Geometry>
                        <GeometryDrawing.Pen>
                            <Pen Thickness="10" StartLineCap="Round" EndLineCap="Round" >
                                <Pen.Brush>
                                    <SolidColorBrush Color="Black" />
                                </Pen.Brush>
                            </Pen>
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>

                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>

        <DrawingBrush x:Key="coveredBrush">
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <GeometryDrawing Brush="White">
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry Rect="0,0,300,300" RadiusX="{StaticResource backgroundEdgeRadius}" RadiusY="{StaticResource backgroundEdgeRadius}" />
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>

        <DrawingBrush x:Key="uncoveredBrush">
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <GeometryDrawing Brush="LightBlue">
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry Rect="0,0,300,300" RadiusX="{StaticResource backgroundEdgeRadius}" RadiusY="{StaticResource backgroundEdgeRadius}" />
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>

        <Style x:Key="TileButton" TargetType="Button">
            <Setter Property="MinWidth" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
            <Setter Property="MinHeight" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
            <Setter Property="Background" Value="{StaticResource coveredBrush}" />
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="FontWeight" Value="Bold"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" BorderThickness="2" Padding="4,2" BorderBrush="DarkGray" CornerRadius="3" Background="{TemplateBinding Background}">  
                            <Grid>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="content"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                                <Setter Property="Foreground" Value="#FF4788c8" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="RenderTransform" >
                                    <Setter.Value>
                                        <TranslateTransform Y="1.0" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=MyTileControl, Path=TileState}" Value="Flagged">
                    <Setter Property="Background" Value="{StaticResource flagBrush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=MyTileControl, Path=TileState}" Value="Exploded">
                    <Setter Property="Background" Value="{StaticResource bombBrush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=MyTileControl, Path=TileState}" Value="Uncovered">
                    <Setter Property="Background" Value="{StaticResource uncoveredBrush}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Button Name="tileButton" 
                Style="{StaticResource TileButton}"                 
                Content="{Binding ElementName=MyTileControl, Path=Text}" >
            <Button.InputBindings>
                <MouseBinding Gesture="RightClick" Command="{Binding ElementName=MyTileControl, Path=HandleTileClickCommand}" />
                <MouseBinding Gesture="LeftClick" Command="{Binding ElementName=MyTileControl, Path=HandleTileClickCommand}" />
            </Button.InputBindings>
        </Button>        
    </Grid>
</UserControl>
